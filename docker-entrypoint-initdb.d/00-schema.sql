\c root root

CREATE SCHEMA ProfHub;

CREATE TABLE ProfHub.User (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,

    name      VARCHAR(128) NOT NULL,
    birthdate DATE         NOT NULL,
    email     VARCHAR(254) NOT NULL UNIQUE,
    phone     VARCHAR(128) NOT NULL,
    github    VARCHAR(128) NOT NULL,

    PRIMARY KEY (id)
);

CREATE TYPE ProfHub.Language AS ENUM (
    'alemão', 'árabe', 'árabe egípcio',
    'bengali', 'birmanês',
    'chinê', 'coreano', 'curdo',
    'espanhol',
    'francês',
    'gujarati',
    'hausa', 'hindi',
    'indonésio', 'inglês', 'italiano',
    'japonês', 'javanês',
    'kannada',
    'malaiala', 'marathi',
    'oriya',
    'persa', 'polaco', 'português', 'punjabi',
    'romeno', 'russo',
    'somali', 'sundanês',
    'tagalog', 'tailandês', 'tamil', 'telugu', 'turco',
    'ucraniano', 'urdu',
    'vietnamita'
);


CREATE TYPE ProfHub.LanguageProficiencyLevel AS ENUM ('A1', 'A2', 'B1', 'B2', 'C1', 'C2');

CREATE TABLE ProfHub.LanguageKnowledge(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,

    uid               BIGINT                           NOT NULL,
    language          ProfHub.Language                 NOT NULL,
    proficiency_level ProfHub.LanguageProficiencyLevel NOT NULL,

    PRIMARY KEY (id),

    FOREIGN KEY (uid) REFERENCES ProfHub.User(id) ON DELETE CASCADE
);

CREATE TABLE ProfHub.Certificate(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,

    uid               BIGINT      NOT NULL,

    name              VARCHAR(32) NOT NULL,
    date              DATE        NOT NULL,
    validation_key    TEXT        NOT NULL,
    expire_date   DATE        NOT NULL,

    PRIMARY KEY (id),

    FOREIGN KEY (uid) REFERENCES ProfHub.User(id) ON DELETE CASCADE
);

CREATE TABLE ProfHub.Course(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,

    uid               BIGINT      NOT NULL,

    name              VARCHAR(32) NOT NULL,
    workload          INT         NOT NULL,
    date              DATE        NOT NULL,
    description       TEXT        NOT NULL,

    PRIMARY KEY (id),

    FOREIGN KEY (uid) REFERENCES ProfHub.User(id) ON DELETE CASCADE
);

CREATE TABLE ProfHub.WorkingExperience(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,

    uid              BIGINT       NOT NULL,

    job              VARCHAR(32)  NOT NULL,
    company          VARCHAR(128) NOT NULL,
    starting_date    DATE         NOT NULL,
    ending_date      DATE         NOT NULL,
    description      TEXT         NOT NULL,

    PRIMARY KEY (id),

    FOREIGN KEY (uid) REFERENCES ProfHub.User(id) ON DELETE CASCADE
);

CREATE TYPE ProfHub.EducationalLevel AS ENUM ('technical', 'undergraduate', 'postgraduate', 'master', 'doctorate', 'postdoctorate');

CREATE TABLE ProfHub.AcademicBackground(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,

    uid              BIGINT                   NOT NULL,

    name             VARCHAR(32)              NOT NULL,
    institution      VARCHAR(128)             NOT NULL,
    starting_date    DATE                     NOT NULL,
    ending_date      DATE                     NOT NULL,
    workload         INT                      NOT NULL,
    description      TEXT                     NOT NULL,
    level            ProfHub.EducationalLevel NOT NULL,

    PRIMARY KEY (id),

    FOREIGN KEY (uid) REFERENCES ProfHub.User(id) ON DELETE CASCADE
);

CREATE TABLE ProfHub.Auth(
    uid              BIGINT       NOT NULL,
    password_hash    TEXT         NOT NULL,

    PRIMARY KEY (uid),

    FOREIGN KEY (uid) REFERENCES ProfHub.User(id) ON DELETE CASCADE
);
